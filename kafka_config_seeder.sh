#!/bin/bash

curl -X POST http://kafka-connect:8083/connectors/ -H "Content-Type: application/json" -d '{ "name": "entities_streaming", "config": {  "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",  "connection.url": "jdbc:mysql://mysql:3306/gennydb",  "connection.user": "replication",  "connection.password": "password",  "topic.prefix": "replication-",  "table.whitelist" : "attribute, question",  "mode":"timestamp",  "timestamp.column.name": "updated",  "validate.non.null": false,  "value.converter": "io.confluent.connect.avro.AvroConverter",  "value.converter.schema.registry.url": "http://schema-registry:8081", "transforms":"copyFieldToKey,extractKeyFromStruct", "transforms.copyFieldToKey.type":"org.apache.kafka.connect.transforms.ValueToKey", "transforms.copyFieldToKey.fields":"id", "transforms.extractKeyFromStruct.type":"org.apache.kafka.connect.transforms.ExtractField$Key", "transforms.extractKeyFromStruct.field":"id"} }'

curl -X POST http://kafka-connect:8083/connectors/ -H "Content-Type: application/json" -d '{ "name": "baseentity_attribute_streaming", "config": {  "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",  "connection.url": "jdbc:mysql://mysql:3306/gennydb",  "connection.user": "replication",  "connection.password": "password",  "topic.prefix": "replication-baseentity_attribute",  "query": "select * from (select concat_ws(\":\",bea.realm,bea.baseEntityCode,bea.attributeCode) as keyCol, bea.attributeCode, bea.baseEntityCode, be.name, be.code, be.realm, bea.created, bea.inferred, bea.privacyFlag, bea.readonly, bea.updated as baseentity_attribute_updated, bea.valueBoolean, bea.valueDate, bea.valueDateRange, bea.valueDateTime, bea.valueDouble, bea.valueInteger, bea.valueLong, bea.money, bea.valueString, bea.valueTime, bea.weight, bea.icon, bea.confirmationFlag, be.id as baseentity_attribute_id from baseentity_attribute bea join baseentity be on (be.code=bea.baseEntityCode and be.realm=bea.realm)) tbl",  "mode":"timestamp+incrementing",  "timestamp.column.name": "baseentity_attribute_updated", "incrementing.column.name": "baseentity_attribute_id", "validate.non.null": false,  "value.converter": "io.confluent.connect.avro.AvroConverter",  "value.converter.schema.registry.url": "http://schema-registry:8081", "transforms":"copyFieldToKey,extractKeyFromStruct", "transforms.copyFieldToKey.type":"org.apache.kafka.connect.transforms.ValueToKey", "transforms.copyFieldToKey.fields":"keyCol", "transforms.extractKeyFromStruct.type":"org.apache.kafka.connect.transforms.ExtractField$Key", "transforms.extractKeyFromStruct.field":"keyCol"} }'

ksql http://ksqldb-server:8088 --execute "CREATE TABLE attribute_tbl (dtype VARCHAR, id BIGINT PRIMARY KEY, created TIMESTAMP, name VARCHAR, realm VARCHAR, updated TIMESTAMP, code VARCHAR, className VARCHAR, dttCode VARCHAR, inputmask VARCHAR, typeName VARCHAR, validation_list VARCHAR, defaultPrivacyFlag INTEGER, defaultValue VARCHAR, description VARCHAR, help VARCHAR, placeholder VARCHAR, component VARCHAR, icon VARCHAR, status INTEGER) WITH (KAFKA_TOPIC='replication-attribute', VALUE_FORMAT='AVRO', KEY_FORMAT='AVRO');"

ksql http://ksqldb-server:8088 --execute "CREATE TABLE question_tbl (dtype VARCHAR, id BIGINT PRIMARY KEY, created TIMESTAMP, name VARCHAR, realm VARCHAR, updated TIMESTAMP, code VARCHAR, attributeCode VARCHAR, html VARCHAR, mandatory INTEGER, oneshot INTEGER, placeholder VARCHAR, readonly INTEGER, attribute_id BIGINT, directions VARCHAR, helper VARCHAR, icon VARCHAR, status INTEGER) WITH (KAFKA_TOPIC='replication-question', VALUE_FORMAT='AVRO', KEY_FORMAT='AVRO');"

ksql http://ksqldb-server:8088 --execute "CREATE TABLE baseentity_attribute_tbl (keyCol VARCHAR, attributeCode VARCHAR, baseEntityCode VARCHAR, name VARCHAR, code VARCHAR, realm VARCHAR, created TIMESTAMP, inferred INTEGER, privacyFlag INTEGER, readonly INTEGER, baseentity_attribute_updated TIMESTAMP, valueBoolean INTEGER, valueDate DATE, valueDateRange BYTES, valueDateTime TIMESTAMP, valueDouble DOUBLE, valueInteger INT, valueLong BIGINT, money VARCHAR, valueString VARCHAR, valueTime TIMESTAMP, weight DOUBLE, icon VARCHAR, confirmationFlag INTEGER, baseentity_attribute_id BIGINT) WITH (KAFKA_TOPIC='replication-baseentity_attribute', VALUE_FORMAT='AVRO', KEY_FORMAT='AVRO');"
