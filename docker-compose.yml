version: '2'
 
services:
  mysql:
    image: mysql:latest 
    container_name: mysql
    env_file:
      - ${ENV_FILE} 
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mainproxy
    ports:
      - 3310:3306 
    restart: unless-stopped
 
 
  qwanda-service:
    depends_on:
      - mysql
      - keycloak
    image: gennyproject/qwanda-service:latest 
    container_name: qwanda-service 
    volumes:
      - ./realm:/opt/realm
    env_file:
      - ${ENV_FILE} 
    ports:
      - 8887:8787
      - 8280:8080
    links:
      - mysql:mysql
      - keycloak:keycloak
    restart: unless-stopped
    networks:
      - mainproxy

  keycloak:
    image: gennyproject/keycloak:working 
    container_name: keycloak 
    env_file:
      - ${ENV_FILE} 
#    environment:
#      - IMPORTEXPORT=EXPORT
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
    volumes:
      - ./realm:/tmp/realm 
    networks:
      - mainproxy
    ports:
      - 8180:8080
    command: -b 0.0.0.0  


  bridge:
    image: gennyproject/bridge:latest
    container_name: bridge 
    volumes:
      - ./realm:/opt/realm
    env_file:
      - ${ENV_FILE} 
    networks:
      - mainproxy
    links:
      - qwanda-service:qwanda-service
      - keycloak
    ports:
      - 8081:8081    
      - 8082:8082    
    command: java -DdockerNetworkNames=mainproxy -DdockerServiceNames=gennymain_hazelcast-genny -DhazelcastPeerPort=5701 -jar /test.jar
   
  rulesservice:
    image: gennyproject/rulesservice:latest
    container_name:  rulesservice 
    volumes:
      - ./realm:/opt/realm
      - ./rules:/opt/rules
    links:
      - bridge:bridge
      - qwanda-service:qwanda-service
      - keycloak
    env_file:
      - ${ENV_FILE} 
    depends_on:
      - bridge 
      - qwanda-service
    networks:
      - mainproxy
    restart: always
    command: java -DdockerNetworkNames=mainproxy -DdockerServiceNames=gennymain_hazelcast-genny -DhazelcastPeerPort=5701 -jar /test.jar

#  social:
#    image: gennyproject/social:latest
#    container_name: social 
#    volumes:
#      - ./realm:/opt/realm
#    env_file:
#      - ${ENV_FILE} 
#    networks:
#      - mainproxy
#    links:
#      - qwanda-service:qwanda-service
#      - keycloak
#    ports:
#      - 8083:8083    
#    command: java -DdockerNetworkNames=mainproxy -DdockerServiceNames=gennymain_hazelcast-genny -DhazelcastPeerPort=5701 -jar /test.jar

#  kie-client: 
#    image: gennyproject/kie-client:latest  
#    container_name: kie-client
#    links:
#      - kie-server 
#      - keycloak
#    networks:
#      - mainproxy
#    command: java -DdockerNetworkNames=mainproxy -DdockerServiceNames=gennymain_hazelcast-genny -DhazelcastPeerPort=5701 -jar /test.jar

  kie-server: 
    image: jboss/kie-server:latest  
    container_name: kie-server
    ports:
      - 8480:8080
    links:
      - qwanda-service:qwanda-service
      - keycloak
    networks:
      - mainproxy

  kie-workbench: 
    image: jboss/jbpm-workbench:latest  
    container_name: kie-workbench
    ports:
      - 8580:8080
    links:
      - qwanda-service:qwanda-service
      - keycloak
      - kie-server
    networks:
      - mainproxy

  mail:
    image: tvial/docker-mailserver:latest
    hostname: mail
    domainname: domain.com
    container_name: mail
    ports:
    - "25:25"
    - "143:143"
    - "587:587"
    - "993:993"
    volumes:
    - maildata:/var/mail
    - mailstate:/var/mail-state
    - ./config/:/tmp/docker-mailserver/
    environment:
    - ENABLE_SPAMASSASSIN=1
    - ENABLE_CLAMAV=1
    - ENABLE_FAIL2BAN=1
    - ENABLE_POSTGREY=1
    - ONE_DIR=1
    - DMS_DEBUG=0
    cap_add:
    - NET_ADMIN
    networks:
      - mainproxy


volumes:
  mysql_data:
  maildata:
    driver: local
  mailstate:
    driver: local 
networks:
  mainproxy:
    driver: bridge 


