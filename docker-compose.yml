version: '2.3'

services:

  infinispan:
    image: gennyproject/infinispan:14-7
    #image: quay.io/infinispan/server:13.0.5.Final-2
    container_name: infinispan
    hostname: infinispan
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 11222:11222
    environment:
        JAVA_OPTS: "-Dinfinispan.bind.address=0.0.0.0 -Dpersistence.db.server.ip=alyson.genny.life -Dpersistence.db.server.port=3310 -Dpersistence.db.name=gennydb  -Dpersistence.db.username=genny -Dpersistence.db.password=password"
        USER: genny
        PASS: password
        ISPN_HOME: /opt/infinispan
    volumes:
      - ./infinispan/infinispan_persistence.xml:/opt/infinispan/server/conf/infinispan.xml
      - ./infinispan/rebuild_index.sh:/opt/infinispan/server/bin/rebuild_index.sh
      - ./databaseScripts/modify_primarykey_baseentity.sh:/opt/infinispan/server/bin/modify_primarykey_baseentity.sh
    networks:
      - mainproxy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:11222/rest/v2/cache-managers/default/health/status" ]
      interval: 30s
      timeout: 10s
      retries: 4

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper 
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
     - mainproxy
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 30s
      timeout: 10s
      retries: 4
    environment:
      LOG_DIR: "/tmp/logs"
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    #image: strimzi/kafka:latest-kafka-2.5.0
    depends_on:
      - zookeeper
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://alyson.genny.life:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 6000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_PRODUCER_MAX_REQUEST_SIZE: 15728640
      KAFKA_REPLICA_FETCH_MAX_BYTES: 15728640
      KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES: 15728640
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 4

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.0
    hostname: schema-registry
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - mainproxy
    depends_on:
      - kafka
    ports:
      - '8081:8081'

  kafka-connect:
    hostname: kafka-connect
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:7.0.0
    depends_on:
      - schema-registry
    networks:
      - mainproxy
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_PRODUCER_COMPRESSION_TYPE: lz4
      CONNECT_GROUP_ID: connect
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_CONFIG_STORAGE_TOPIC: connect_config
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 15728640
      CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES: 15728640
      CONNECT_PLUGIN_PATH: '/usr/share/java'
    volumes:
      - './books.xsd:/books.xsd:ro'
    command:
      - bash
      - -c
      - |
        cd /etc/kafka-connect/jars/
        wget https://packages.confluent.io/maven/io/confluent/kafka-connect-jdbc/10.2.5/kafka-connect-jdbc-10.2.5.jar
        wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.27/mysql-connector-java-8.0.27.jar
        wget https://packages.confluent.io/maven/io/confluent/kafka-connect-avro-converter/7.0.0/kafka-connect-avro-converter-7.0.0.jar
        sleep infinity &
        /etc/confluent/docker/run

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.22.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - schema-registry
    networks:
      - mainproxy
    ports:
      - "8090:8090"
    environment:
      KSQL_LISTENERS: http://ksqldb-server:8090
      KSQL_BOOTSTRAP_SERVERS: kafka:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_LOG4J_ROOT_LOGLEVEL: "ERROR"
      KSQL_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      KSQL_LOG4J_PROCESSING_LOG_BROKERLIST: kafka:29092
      KSQL_LOG4J_PROCESSING_LOG_TOPIC: __ksql-processing-log
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_NAME: __ksql-processing-log
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_MAX_REQUEST_SIZE: 15728640
      KSQL_KSQL_AUTO_OFFSET_RESET: "earliest"
    healthcheck:
      test:
        curl -f http://ksqldb-server:8090/ || exit 1
    command:
      - bash
      - -c
      - |
        /usr/bin/docker/run

  nginx:
    image: jwilder/nginx-proxy:alpine
    hostname: nginx
    depends_on:
      bridge:
        condition: service_healthy
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - mainproxy
    environment:
      - SKIP_HTTPS_REDIRECT=true
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:delegated
      - ./nginx/vhost.d:/etc/nginx/vhost.d:delegated
      - ./nginx/html:/usr/share/nginx/html:delegated
      - ./nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  imageproxy:
    image: willnorris/imageproxy:v0.10.0
    container_name: imageproxy
    ports:
      - "46243:8080"
    networks:
      - mainproxy
    command: -cache /tmp/imageproxy -addr 0.0.0.0:8080 -scaleUp true

  alyson:
    image: gennyproject/alyson
    container_name: alyson
    depends_on:
      - bridge
    ports:
      - "7010:8080"
    environment:
      - VIRTUAL_HOST=internmatch.genny.life,stt.genny.life,alyson.*
      - VIRTUAL_PORT=8080
      - REACT_BRIDGE_HOST=http://bridge.genny.life
      - NODE_ENV=production
      - CORS_URLS=http://10.123.123.123:3000|http://internmatch.genny.life:3000|
      - realm=internmatch
      - ENV_KEYCLOAK_REDIRECTURI=https://keycloak.gada.io/auth
    env_file:
      - ${ENV_FILE}
    networks:
      - mainproxy
    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    env_file:
      - ${ENV_FILE}
    volumes:
      - minio_data:/data:delegated
      - minio_conf:/root/.minio:delegated
    networks:
      - mainproxy
    ports:
      - 9000:9000
    command: server /data

  genny-proxy:
    image: gennyproject/genny-proxy:latest
    container_name: genny-proxy 
    user: root
#    depends_on:
    volumes:
      - abn_tmp:/tmp/:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - CORS_LIST=https://internmatch.genny.life,http://localhost:3000,https://stt.genny.life
    networks:
      - mainproxy
    ports:
      - 8483:8080

  media-proxy:
    image: gennyproject/media-proxy:latest
    container_name: media-proxy
    env_file:
      - ${ENV_FILE}
    environment:
      - KEYCLOAKURL=https://keycloak.gada.io/auth/realms
    networks:
      - mainproxy
    ports:
      - 9898:9898
    command: java -jar /service.jar

  mysql:
    image:  mysql:8.0.25 
#    image:  gennyproject/mysql:8x 
    platform: linux/x86_64
    container_name: mysql
    environment:
      - MYSQL_URL=mysql
      - MYSQL_DB=gennydb
      - MYSQL_PORT=3306
      - MYSQL_ALLOW_EMPTY=
      - MYSQL_DATABASE=gennydb
      - MYSQL_USER=genny
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=password
    env_file:
      - ${ENV_FILE}
    volumes:
      - mysql_data:/var/lib/mysql:delegated
    networks:
      - mainproxy
    ports:
      - 3310:3306
    command: --sql_mode="" --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone="+00:00"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  bootq:
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      infinispan:
        condition: service_healthy
    image: gennyproject/bootq:latest
    container_name: bootq 
    volumes:
      - ./google_credentials:/root/.genny/sheets.googleapis.com-java-quickstart:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - GOOGLE_SVC_ACC_PATH=/root/.genny/sheets.googleapis.com-java-quickstart/token-secret-service-account.json
      - CLEANUP_TASK_AND_BEATTRFORM=false
      - MYSQL_USER=genny
      - MYSQL_PASSWORD=password
      - FULL_MYSQL_URL=mysql/gennydb?serverTimezone=UTC
    ports:
      - "8480:8080"
      - "8487:5005"
    links:
      - mysql:mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/bootq/version"]
      interval: 10s
      timeout:  5s
      retries:  5    
      start_period: 6s
    restart: unless-stopped
    networks:
      - mainproxy

  # qwanda-service:
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     kafka:
  #       condition: service_healthy
  #     infinispan:
  #       condition: service_healthy
  #     #keycloak:
  #     #  condition: service_healthy
  #   image: gennyproject/wildfly-qwanda-service:latest
  #   container_name: qwanda-service
  #   volumes:
  #     - ./google_credentials:/root/.genny/sheets.googleapis.com-java-quickstart:delegated
  #     - abn_tmp:/tmp/:delegated
  #   env_file:
  #     - ${ENV_FILE}
  #   environment:
  #     - PROJECT_REALM=internmatch
  #     - USE_VERTX_UTILS=true
  #     - FORCE_EVENTBUS_USE_API=FALSE
  #     - FORCE_CACHE_USE_API=FALSE
  #     - VIRTUAL_HOST=qwanda-service.*,api.*
  #     - IS_CACHE_SERVER=true
  #     - JAVA_OPTS=-server 
  #       -Xms64m -Xmx2048m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=2048m 
  #       -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70 -XX:+ExplicitGCInvokesConcurrent 
  #       -Dsun.rmi.dgc.client.gcInterval=1800000 -Dsun.rmi.dgc.server.gcInterval=1800000 
  #       -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true
  #     - ADMIN_USERNAME=GENNY 
  #     - ADMIN_PASSWORD=GENNY
  #     - VIRTUAL_PORT=8080
  #     - VIRTUAL_PROTO=http
  #     - CERT_NAME=genny.life
  #     - GENNY_KAFKA_URL=kafka:29092
  #     - LOAD_DDT_IN_STARTUP=TRUE
  #     - SEARCH_ALT=TRUE
  #     - SKIP_GITHUB_IN_STARTUP=TRUE
  #     - SKIP_GOOGLE_DOC_IN_STARTUP=FALSE
  #     - DEBUG=TRUE
  #     - DEBUG_SUSPEND=n
  #     - DDTHOST=TRUE
  #     - DISABLE_BATCH_LOADING=FALSE
  #     - USE_FYODOR="TRUE"
  #     - XMX=4096m
  # #    - DEV_MODE=TRUE
  # #    - DDT_URL=http://bridge:8089 

  #   ports:
  #     - "8280:8080"
  #     - "8887:8787"
  #     - "10003:10003"
  #   links:
  #     - mysql:mysql
  #     - kafka:kafka 
  #       #- keycloak:keycloak
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/version"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 100    
  #   restart: unless-stopped
  #   networks:
  #     - mainproxy

  bridge:
    image: gennyproject/bridge:latest
    depends_on:
      kafka:
        condition: service_healthy
    container_name: bridge
    volumes:
      - ./realm:/opt/realm:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - CORS_URLS=http://10.123.123.123:3000|http://internmatch.genny.life:3000|
      - realm=internmatch
      - ENV_KEYCLOAK_REDIRECTURI=https://keycloak.gada.io/auth
      - QWANDA_SERVICE_URL=http://wildfly-rulesservice
      - RULESSERVICE_URL=http://wildfly-rulesservice
      - MEDIA_PROXY_URL=https://alyson.genny.life/web/public
      - GENNY_KAFKA_URL=kafka:29092
      - GENNY_REALM=internmatch
      - GENNY_CLIENT_ID=${GENNY_CLIENT_ID}
      - GENNY_CLIENT_SECRET=${GENNY_CLIENT_SECRET}
      - GENNY_SERVICE_USERNAME=${GENNY_SERVICE_USERNAME}
      - GENNY_SERVICE_PASSWORD=${GENNY_SERVICE_PASSWORD}
      - GENNY_KEYCLOAK_URL=https://keycloak.gada.io
      - INFINISPAN_URL=alyson.genny.life:11222
      - INFINISPAN_USERNAME=genny
      - INFINISPAN_PASSWORD=password
      - GENNY_SHOW_VALUES=TRUE
      - realm=mentormatch
    networks:
      - mainproxy
    ports:
      - 8088:8080
      - 5115:5005
      - 8089:8089
      - 5701:5701
      - 10001:10001
      - 5154:5154
      - 5155:5155
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/version"]
      interval: 10s
      timeout: 10s
      retries: 30

  fyodor:
    image: gennyproject/fyodor:latest
    container_name:  fyodor 
    depends_on:
      mysql:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file:
      - ${ENV_FILE}
    ports:
      - "4242:8080"
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/version"]
      interval: 10s
      timeout: 10s
      retries: 30

  gadaq:
    image: gennyproject/gadaq:latest
    container_name: gadaq 
    depends_on:
      mysql:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      kafka:
        condition: service_healthy
      fyodor:
        condition: service_healthy
    env_file:
      - ${ENV_FILE}
    ports:
      - "6590:8080"
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/version"]
      interval: 10s
      timeout: 10s
      retries: 30

  dropkick:
    image: gennyproject/dropkick:latest
    container_name:  dropkick 
    depends_on:
      mysql:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      kafka:
        condition: service_healthy
      fyodor:
        condition: service_healthy
    env_file:
      - ${ENV_FILE}
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health/ready"]
      interval: 10s
      timeout: 10s
      retries: 30

  lauchy:
    image: gennyproject/lauchy:latest
    container_name: lauchy 
    depends_on:
      mysql:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      kafka:
        condition: service_healthy
      fyodor:
        condition: service_healthy
    env_file:
      - ${ENV_FILE}
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health/ready"]
      interval: 10s
      timeout: 10s
      retries: 30

  messages:
    image: gennyproject/messages:latest
    container_name:  messages
    depends_on:
      mysql:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      kafka:
        condition: service_healthy
      fyodor:
        condition: service_healthy
    env_file:
      - ${ENV_FILE}
    environment:
      EMAIL_SMTP_AUTH: "true"
      EMAIL_SMTP_HOST: smtp.gmail.com
      EMAIL_SMTP_PORT: 587
      EMAIL_SMTP_STARTTLS: "true"
      MAIL_SMTP_AUTH: "true"
      MAIL_SMTP_HOST: smtp.gmail.com
      MAIL_SMTP_PORT: 587
      MAIL_SMTP_STARTTLS_ENABLE: "true"
      JAVA_OPTS: -Dquarkus.log.console.level=DEBUG 
    ports:
      - 8791:8787
    command: java  -jar /deployments/service.jar
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 10s
      retries: 30

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    command:
     - '--collect.info_schema.tablestats'
    container_name: mysqld-exporter
    environment:
      # add the mysql database here
      - DATA_SOURCE_NAME=exporter:exporter@(mysql:3306)/
    ports:
      - 9104:9104
    networks:
      - mainproxy
    depends_on:
      mysql:
        condition: service_healthy

  wildfly-rulesservice:
    image: gennyproject/wildfly-rulesservice:latest
    depends_on:
      mysql:
        condition: service_healthy
      fyodor:
        condition: service_healthy
    container_name: wildfly-rulesservice
    env_file:
      - ${ENV_FILE}
    volumes:
      - ./rules:/rules:delegated
      - ./google_credentials:/root/.genny/sheets.googleapis.com-java-quickstart/:delegated
    environment:
      - PROJECT_REALMS=mentormatch:internmatch
      - ADMIN_USERNAME=GENNY 
      - ADMIN_PASSWORD=GENNY
      - BULKPULL=FALSE
      - kafka.bootstrap.servers=kafka:29092
      - CERT_NAME=genny.life
      - DDT_URL=http://alyson7.genny.life:8089
      - DEBUG=TRUE
      - DEBUG_SUSPEND=n
      - DETECT_RULE_CHANGES=TRUE
      - DISABLE_LAYOUT_LOADING=TRUE
      - DROOLS_LOGLEVEL=ERROR
      - FORCE_EVENTBUS_USE_API=FALSE
      - FORCE_CACHE_USE_API=FALSE
      - CACHE_SERVER_NAME=infinispan
      - FRAMES_ON_DEMAND=FALSE
      - HAZELCAST_LOGLEVEL=ERROR
      - HIDE_RULE_STATES=TRUE
      - KEYCLOAK_LOGLEVEL=ERROR
      - PERSIST_RULES=TRUE
      - LOG_WORKFLOWS=FALSE
      - RULES_DIR=/rules
      - SEARCH_ALT=TRUE
      - USE_CONCURRENCY_MSGS=FALSE
      - USE_EVENT_QUEUE=TRUE
      - USE_JMS=TRUE
      - USE_EXECUTOR=TRUE
      - USE_FYODOR=TRUE
      - USE_SINGLETON=FALSE
      - VIRTUAL_HOST=rulesservice.*
      - VIRTUAL_PORT=8080
      - VIRTUAL_PROTO=http
      - XMX=4096m
      - PDF_GEN_SERVICE_API_URL=http://internmatch.genny.life:7331
      - GENNY_KOGITO_DATAINDEX_HTTP_URL=http://alyson.genny.life:8582
      - GENNY_KOGITO_SERVICE_URL=http://alyson2.genny.life:8580
      - JAVA_OPTS=-server 
        -Xms64m -Xmx4096m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=2048m 
        -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70 -XX:+ExplicitGCInvokesConcurrent 
        -Dsun.rmi.dgc.client.gcInterval=1800000 -Dsun.rmi.dgc.server.gcInterval=1800000  
        -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true
      #- JAVA_OPTS=-Xms3048m -Xmx3048m -agentpath:/usr/local/jprofiler12.0.2/bin/linux-x64/libjprofilerti.so=nowait -Djava.net.preferIPv4Stack=true -Dsun.rmi.dgc.client.gcInterval=1800000 -Dsun.rmi.dgc.server.gcInterval=1800000  -server 
    ports:
      - "8380:8080"
      - "8987:8787"
      - "10002:10002"
      - "8849:8849"
  #  healthcheck:
  #    test: ["CMD", "curl", "-f", "http://localhost:8080/version"]
  #    interval: 10s
  #    timeout: 10s
  #    retries: 30    
    restart: unless-stopped
    networks:
      - mainproxy

  data-index:
    container_name: data-index
    image: quay.io/kiegroup/kogito-data-index-infinispan:${KOGITO_VERSION}
    ports:
      - "8582:8080"
    networks:
     - mainproxy
    depends_on:
      infinispan:
        condition: service_healthy
    volumes:
      - ./target/protobuf:/home/kogito/data/protobufs/:delegated
      - ./data-index/data-index-service-infinispan-runner.jar:/home/kogito/bin/data-index-service-infinispan-runner.jar
    environment:
      KAFKA_BOOTSTRAP_SERVERS: alyson.genny.life:9092
      KOGITO_DATA_INDEX_PROPS: -Dkogito.protobuf.folder=/home/kogito/data/protobufs/
      PROJECT_REALM: internmatch
      QUARKUS_INFINISPAN_CLIENT_AUTH_PASSWORD: password
      QUARKUS_INFINISPAN_CLIENT_AUTH_REALM: default
      QUARKUS_INFINISPAN_CLIENT_AUTH_USERNAME: genny
      QUARKUS_INFINISPAN_CLIENT_SASL_MECHANISM: DIGEST-MD5
      QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: infinispan:11222
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "true"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/q/health/ready" ]
      interval: 30s
      timeout: 10s
      retries: 50

  management-console:
    container_name: management-console
    image: quay.io/kiegroup/kogito-management-console:${KOGITO_VERSION}
    ports:
      - 8584:8080
    depends_on:
      data-index:
        condition: service_healthy
    volumes:
      - ./svg/:/home/kogito/data/svg/
    networks:
     - mainproxy
    environment:
      QUARKUS_INFINISPAN_CLIENT_AUTH_PASSWORD: password
      QUARKUS_INFINISPAN_CLIENT_AUTH_REALM: default
      QUARKUS_INFINISPAN_CLIENT_AUTH_USERNAME: genny
      QUARKUS_INFINISPAN_CLIENT_SASL_MECHANISM: DIGEST-MD5
      QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: alyson.genny.life:11222
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "true"
      KOGITO_DATAINDEX_HTTP_URL: http://alyson.genny.life:8582/graphql
      KOGITO_MANAGEMENT_CONSOLE_PROPS:  -Dkogito.consoles.keycloak.config.client-id=kogito-console-quarkus  -Dkogito.consoles.keycloak.config.realm=internmatch -Dkogito.consoles.keycloak.config.url=https://keycloak.gada.io/auth -Dkogito.consoles.keycloak.config.health-check-url=https://keycloak.gada.io/auth/realms/internmatch/.well-known/openid-configuration -Dkogito.svg.folder.path=/home/kogito/data/svg -Dkogito.consoles.keycloak.config.disable-health-check=false -Dkogito.consoles.keycloak.config.update-token-validity=30

  kogitoq-travels:
    image: gennyproject/kogitoq-travels:latest
    container_name: kogitoq-travels
    environment:
      GENNY_SHOW_VALUES: "TRUE"
      GENNY_SERVICE_USERNAME: service
      GENNY_KEYCLOAK_URL: "https://keycloak.gada.io"
      GENNY_API_URL: "http://alyson.genny.life:8280"
      GENNY_KAFKA_URL: kafka:9092
      GENNY_CLIENT_ID: kogito-console-quarkus
      GENNY_REALM: internmatch
      GENNY_KOGITO_SERVICE_URL: "http://alyson.genny.life:8580"
      GENNY_KOGITO_DATAINDEX_HTTP_URL: "http://alyson.genny.life:8582"
      GENNY_KOGITO_DATAINDEX_WS_URL: "ws://alyson.genny.life:8582"
      GENNY_INFINISPAN_URL: "alyson.genny.life:11222"
      GENNY_INFINISPAN_CLIENT_AUTH_PASSWORD: password
      INFINISPAN_PASSWORD: password
      GENNY_INFINISPAN_CLIENT_AUTH_USERNAME: genny
      GENNY_INFINISPAN_CLIENT_SERVER_LIST: "infinispan:11222"
      GENNY_INFINISPAN_CLIENT_USE_AUTH: "true"
      KOGITO_DATAINDEX_HTTP_URL: "http://alyson.genny.life:8582"
      KOGITO_DATAINDEX_WS_URL: "ws://alyson.genny.life:8582"
      GENNY_KOGITO_JOBSERVICE_URL: "alyson.genny.life:8581"
      QUARKUS_INFINISPAN_CLIENT_AUTH_PASSWORD: password
      QUARKUS_INFINISPAN_CLIENT_AUTH_REALM: default
      QUARKUS_INFINISPAN_CLIENT_AUTH_USERNAME: genny
      QUARKUS_INFINISPAN_CLIENT_SASL_MECHANISM: DIGEST-MD5
      QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: alyson.genny.life:11222
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "true"
      QUARKUS_OIDC_AUTH_SERVER_URL: "http://keycloak.gada.io/auth/realms/internmatch"
      QUARKUS_OIDC_CLIENT_ID: kogito-console-quarkus
      QUARKUS_INFINISPAN_CLIENT_CLIENT_INTELLIGENCE: BASIC
      INFINISPAN_CLIENT_HOTROD_SERVER_LIST: alyson.genny.life:11222
      INFINISPAN_CLIENT_HOTROD_CLIENT_INTELLIGENCE: BASIC
      GENNY_CLIENT_ID: ${GENNY_CLIENT_ID}
      GENNY_CLIENT_SECRET: ${GENNY_CLIENT_SECRET}
      GENNY_SERVICE_USERNAME: ${GENNY_SERVICE_USERNAME}
      GENNY_SERVICE_PASSWORD: ${GENNY_SERVICE_PASSWORD}
      GENNY_CACHE_HOST: http://localhost
      GENNY_CACHE_PORT: 8090
      GENNY_MYSQL_FULL_URL: alyson.genny.life:3310/gennydb?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
      MYSQL_USER: genny
      MYSQL_PASSWORD: password
      INFINISPAN_URL: alyson.genny.life:11222
      INFINISPAN_USERNAME: genny
      FYODOR_SERVICE_API: http://fyodor:8080
    ports:
      - "8580:8080"
    networks:
      - mainproxy
    depends_on:
      data-index:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health/ready"]
      interval: 10s
      timeout: 10s
      retries: 30


  kogitoq-visas:
    image: gennyproject/kogitoq-visas:latest
    container_name: kogitoq-visas
    environment:
      GENNY_SHOW_VALUES: "TRUE"
      GENNY_SERVICE_USERNAME: service
      GENNY_KEYCLOAK_URL: https://keycloak.gada.io
      GENNY_API_URL: http://alyson.genny.life:8280
      GENNY_KAFKA_URL: alyson.genny.life:9092
      GENNY_CLIENT_ID: kogito-console-quarkus
      GENNY_REALM: internmatch
      GENNY_KOGITO_SERVICE_URL: http://alyson.genny.life:8579
      GENNY_INFINISPAN_URL: alyson.genny.life:11222
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "true"
      QUARKUS_INFINISPAN_CLIENT_AUTH_USERNAME: "genny"
      QUARKUS_INFINISPAN_CLIENT_AUTH_PASSWORD: "password"
      QUARKUS_INFINISPAN_CLIENT_SASL_MECHANISM: DIGEST-MD5
      QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: alyson.genny.life:11222
    ports:
      - "8579:8080"
    networks:
      - mainproxy
    depends_on:
      data-index:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health/ready"]
      interval: 10s
      timeout: 10s
      retries: 30




volumes:
  abn_tmp:
  mysql_data:
  minio_conf:
  minio_data:
  maildata:
    driver: local
  mailstate:
    driver: local
networks:
  mainproxy:
    name: mp
    driver: bridge

