version: '2.3'

services:
  zookeeper:
    hostname: zookeeper 
    container_name: zookeeper 
    image: strimzi/kafka:latest-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    networks:
      - mainproxy
    environment:
      LOG_DIR: /tmp/logs

  kafka:
#    image: strimzi/kafka:latest-kafka-2.5.0
    image: strimzi/kafka:0.20.1-kafka-2.6.0
    hostname: kafka
    container_name: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override  message.max.bytes=1147483648"
    ]
    depends_on:
      - zookeeper
    networks:
      - mainproxy
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.123.123.123:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 6000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      #KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 100
      KAFKA_PRODUCER_MAX_REQUEST_SIZE: 15728640
      KAFKA_REPLICA_FETCH_MAX_BYTES: 15728640
      KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES: 15728640
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      #      test:
      #        ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 4

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.0
    hostname: schema-registry
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - mainproxy
    depends_on:
      - kafka
    ports:
      - '8081:8081'

  kafka-connect:
    hostname: kafka-connect
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:7.0.0
    depends_on:
      - schema-registry
    networks:
      - mainproxy
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_PRODUCER_COMPRESSION_TYPE: lz4
      CONNECT_GROUP_ID: connect
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_CONFIG_STORAGE_TOPIC: connect_config
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 15728640
      CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES: 15728640
      CONNECT_PLUGIN_PATH: '/usr/share/java'
    volumes:
      - './books.xsd:/books.xsd:ro'
    command:
      - bash
      - -c
      - |
        cd /etc/kafka-connect/jars/
        wget https://packages.confluent.io/maven/io/confluent/kafka-connect-jdbc/10.2.5/kafka-connect-jdbc-10.2.5.jar
        wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.27/mysql-connector-java-8.0.27.jar
        wget https://packages.confluent.io/maven/io/confluent/kafka-connect-avro-converter/7.0.0/kafka-connect-avro-converter-7.0.0.jar
        sleep infinity &
        /etc/confluent/docker/run


  ksqldb-server:
    image: confluentinc/ksqldb-server:0.22.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - schema-registry
    networks:
      - mainproxy
    ports:
      - "8090:8090"
    environment:
      KSQL_LISTENERS: http://ksqldb-server:8090
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_LOG4J_ROOT_LOGLEVEL: "ERROR"
      KSQL_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      KSQL_LOG4J_PROCESSING_LOG_BROKERLIST: kafka:29092
      KSQL_LOG4J_PROCESSING_LOG_TOPIC: __ksql-processing-log
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_NAME: __ksql-processing-log
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_MAX_REQUEST_SIZE: 15728640
      KSQL_KSQL_AUTO_OFFSET_RESET: "earliest"
    healthcheck:
      test:
        curl -f http://ksqldb-server:8090/ || exit 1
    command:
      - bash
      - -c
      - |
        /usr/bin/docker/run

#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.21.0
#    container_name: ksqldb-cli
#    depends_on:
#      - broker
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#    networks:
#      - mainproxy

  infinispan:
    image: infinispan/server:13.0
    #image: infinispan/server:12.1.7.Final
    container_name: infinispan
    environment:
      - USER=genny
      - PASS=password
    ports:
      - 11222:11222
    networks:
      - mainproxy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://infinispan:11222/console/welcome"]
#      interval: 10s
#      timeout: 50s
#      start_period: 20s
#      retries: 100 
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:11222/rest/v2/cache-managers/default/health/status" ]
      interval: 1s
      timeout: 30s
      retries: 50


  nginx:
    image: jwilder/nginx-proxy:alpine
    hostname: nginx
    depends_on:
      bridge:
        condition: service_healthy
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - mainproxy
    environment:
      - SKIP_HTTPS_REDIRECT=true
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:delegated
      - ./nginx/vhost.d:/etc/nginx/vhost.d:delegated
      - ./nginx/html:/usr/share/nginx/html:delegated
#      - ../stt-unity/safeTrafficTown/Build:/usr/share/nginx/html/unity
      - ./nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
#    healthcheck:
#      test: ["CMD", "curl", "--fail", "http://nginx.host.com"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3

  imageproxy:
    image: willnorris/imageproxy:v0.10.0
    container_name: imageproxy
    ports:
      - "46243:8080"
    networks:
      - mainproxy
    command: -cache /tmp/imageproxy -addr 0.0.0.0:8080 -scaleUp true


  alyson:
    image: gennyproject/alyson
    container_name: alyson
    depends_on:
      - bridge
    ports:
      - "7010:8080"
    environment:
      - VIRTUAL_HOST=internmatch.genny.life,stt.genny.life,alyson.*
      - VIRTUAL_PORT=8080
      - REACT_BRIDGE_HOST=http://bridge.genny.life
      - NODE_ENV=production
      - CORS_URLS=http://10.123.123.123:3000|http://internmatch.genny.life:3000|
      - realm=internmatch
      - ENV_GOOGLE_MAPS_APIKEY=AIzaSyBbZ0cT40AScAqSeTi_tEcnzAgeW1jTCUg
      - ENV_KEYCLOAK_REDIRECTURI=https://keycloak.gada.io/auth
    env_file:
      - ${ENV_FILE}
    networks:
      - mainproxy
    restart: always



  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    env_file:
      - ${ENV_FILE}
    volumes:
      - minio_data:/data:delegated
      - minio_conf:/root/.minio:delegated
    networks:
      - mainproxy
    ports:
      - 9000:9000
    command: server /data

  genny-proxy:
    image: gennyproject/genny-proxy:latest
    container_name: genny-proxy 
    user: root
#    depends_on:
#      qwanda-service:
#        condition: service_healthy
    volumes:
      - abn_tmp:/tmp/
    environment:
      - CORS_LIST=https://internmatch.genny.life,http://localhost:3000,https://stt.genny.life
    networks:
      - mainproxy
    ports:
      - 8483:8080

  media-proxy:
    image: gennyproject/media-proxy:latest
    container_name: media-proxy
    env_file:
      - ${ENV_FILE}
    environment:
      - KEYCLOAKURL=https://keycloak.gada.io/auth/realms
    networks:
      - mainproxy
    ports:
      - 9898:9898
    command: java -jar /service.jar

  mysql:
    image:  mysql:8.0.25 
#    image:  gennyproject/mysql:8x 
    container_name: mysql
    environment:
      - MYSQL_URL=mysql
      - MYSQL_DB=gennydb
      - MYSQL_PORT=3306
      - MYSQL_ALLOW_EMPTY=
      - MYSQL_DATABASE=gennydb
      - MYSQL_USER=genny
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=password
    env_file:
      - ${ENV_FILE}
    volumes:
      - mysql_data:/var/lib/mysql:delegated
    networks:
      - mainproxy
    ports:
      - 3310:3306
    command: --sql_mode="" --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone="+00:00"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  bootq:
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      infinispan:
        condition: service_healthy
    image: gennyproject/bootq:latest
    container_name: bootq 
    volumes:
      - ./google_credentials:/root/.genny/sheets.googleapis.com-java-quickstart
    env_file:
      - ${ENV_FILE}
    environment:
      - GOOGLE_SVC_ACC_PATH=/root/.genny/sheets.googleapis.com-java-quickstart/token-secret-service-account.json
      - CLEANUP_TASK_AND_BEATTRFORM=false
      - MYSQL_USER=genny
      - MYSQL_PASSWORD=password
      - FULL_MYSQL_URL=mysql/gennydb?serverTimezone=UTC
      - REACT_APP_QWANDA_API_URL=http://qwanda-service:8080
    ports:
      - "8480:8080"
      - "8487:5005"
    links:
      - mysql:mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/bootq/version"]
      interval: 10s
      timeout:  5s
      retries:  5    
      start_period: 6s
    restart: unless-stopped
    networks:
      - mainproxy


  qwanda-service:
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      infinispan:
        condition: service_healthy
      #keycloak:
      #  condition: service_healthy
    image: gennyproject/wildfly-qwanda-service:latest
    container_name: qwanda-service
    volumes:
      - ./google_credentials:/root/.genny/sheets.googleapis.com-java-quickstart
      - abn_tmp:/tmp/
    env_file:
      - ${ENV_FILE}
    environment:
      - PROJECT_REALM=internmatch
      - USE_VERTX_UTILS=true
      - FORCE_EVENTBUS_USE_API=FALSE
      - FORCE_CACHE_USE_API=FALSE
      - VIRTUAL_HOST=qwanda-service.*,api.*
      - IS_CACHE_SERVER=true
      - JAVA_OPTS=-server 
        -Xms64m -Xmx2048m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=2048m 
        -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70 -XX:+ExplicitGCInvokesConcurrent 
        -Dsun.rmi.dgc.client.gcInterval=1800000 -Dsun.rmi.dgc.server.gcInterval=1800000 
        -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true
      - ADMIN_USERNAME=GENNY 
      - ADMIN_PASSWORD=GENNY
      - VIRTUAL_PORT=8080
      - VIRTUAL_PROTO=http
      - CERT_NAME=genny.life
      - LOAD_DDT_IN_STARTUP=TRUE
      - SEARCH_ALT=TRUE
      - SKIP_GITHUB_IN_STARTUP=TRUE
      - SKIP_GOOGLE_DOC_IN_STARTUP=TRUE
      - DEBUG=TRUE
      - DEBUG_SUSPEND=n
      - DDTHOST=TRUE
      - DISABLE_BATCH_LOADING=FALSE
      - XMX=4096m
  #    - DEV_MODE=TRUE
  #    - DDT_URL=http://bridge:8089 

    ports:
      - "8280:8080"
      - "8887:8787"
      - "10003:10003"
    links:
      - mysql:mysql
        #- keycloak:keycloak
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/version"]
      interval: 10s
      timeout: 10s
      retries: 100    
    restart: unless-stopped
    networks:
      - mainproxy


  bridge:
    image: gennyproject/bridge
    depends_on:
#      qwanda-service:
#        condition: service_healthy
      kafka:
        condition: service_healthy
#      infinispan:
#        condition: service_healthy
#      wildfly-rulesservice:
#        condition: service_healthy
      qwanda-service:
        condition: service_healthy
    container_name: bridge
    volumes:
      - ./realm:/opt/realm:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - CORS_URLS=http://10.123.123.123:3000|http://internmatch.genny.life:3000|
      - realm=internmatch
      - ENV_GOOGLE_MAPS_APIKEY=AIzaSyBbZ0cT40AScAqSeTi_tEcnzAgeW1jTCUg
      - ENV_KEYCLOAK_REDIRECTURI=https://keycloak.gada.io/auth
      - QWANDA_SERVICE_URL=http://wildfly-rulesservice
      - RULESSERVICE_URL=http://wildfly-rulesservice
      - ADMIN_USERNAME=GENNY 
      - ADMIN_PASSWORD=GENNY
      - VIRTUAL_HOST=bridge.genny.life
      - VIRTUAL_PORT=8088
      - KAFKA_URL=kafka:9092
      - VIRTUAL_PROTO=http
      - CERT_NAME=genny.life
      - KEYCLOAKURL=https://keycloak.gada.io/auth/realms
      - CACHE_SERVER_NAME=infinispan
      - DDTHOST=TRUE
      - API_PORT=8088
      - CACHE_API_PORT=8089
  #   - ZIP_MODE=TRUE
      - MODE_GZIP=TRUE
      - ZIP_MIN_THRESHOLD_BYTES=8000000
      - MEDIA_PROXY_URL=https://alyson.genny.life/web/public
  #    - DDT_URL=http://bridge:8089
  #    - DEV_MODE=TRUE
  #    - GENNYDEV=TRUE
  #    - GENNY_DEV=TRUE
    networks:
      - mainproxy
    ports:
      - 8088:8088
      - 8790:5005
      - 8089:8089
      - 5701:5701
      - 10001:10001
#      - 4001:15701
    #command: java  -jar /deployments/service.jar 
#    command: java  -Xdebug -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n  -Dvertx.metrics.options.enabled=true -Dvertx.options.blockedThreadCheckInterval=2147483647 -jar /service.jar 
#    command: java -agentpath:/usr/local/YourKit-JavaProfiler-2019.8/bin/linux-x86-64/libyjpagent.so=port=10001,listen=all -Xdebug -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n  -Dvertx.options.blockedThreadCheckInterval=2147483647 -Dadmin.password=GENNY -Dadmin.username=GENNY -jar /deployments/service.jar 
#    command: java -jar -Dadmin.username=GENNY -Dadmin.password=GENNY /deployments/service.jar 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/api/version"]
      interval: 10s
      timeout: 10s
      retries: 30


  lauchy:
    image: gennyproject/lauchy:latest
    depends_on:
      qwanda-service:
        condition: service_healthy
      kafka:
        condition: service_healthy
    container_name: lauchy 
    volumes:
      - ./realm:/opt/realm:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - ADMIN_USERNAME=GENNY
      - ADMIN_PASSWORD=GENNY
      - VIRTUAL_HOST=lauchy.genny.life
      - VIRTUAL_PORT=8080
      - KAFKA_URL=kafka:9092
      - CERT_NAME=genny.life
      - GENNY_SHOW_VALUES=true
      - GENNY_ENABLE_BLACKLIST=false
      - GENNY_API_URL=http://qwanda-service:8080
      - GENNY_BRIDGE_URL=http://bridge:80
      - GENNY_CLIENT_ID=backend
      - GENNY_KAFKA_URL=kafka:9092
      - GENNY_KEYCLOAK_URL=https://keycloak.gada.io
      - GENNY_REALM=internmatch
      - GENNY_SERVICE_USERNAME=service
      - PROJECT_REALM=internmatch
    networks:
      - mainproxy
#    ports:
#      - 8988:8080
  #  command: java  -jar /deployments/service.jar
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 10s
      retries: 30

  dropkick:
    image: gennyproject/dropkick:latest
    depends_on:
      qwanda-service:
        condition: service_healthy
      kafka:
        condition: service_healthy
    container_name:  dropkick 
    volumes:
      - ./realm:/opt/realm:delegated
    env_file:
      - ${ENV_FILE}
    environment:
      - ADMIN_USERNAME=GENNY
      - ADMIN_PASSWORD=GENNY
      - VIRTUAL_HOST=dropkick.genny.life
      - VIRTUAL_PORT=8080
      - KAFKA_URL=kafka:9092
      - CERT_NAME=genny.life
      - GENNY_SHOW_VALUES=true
      - GENNY_SERVICE_USERNAME=service
      - GENNY_KEYCLOAK_URL=https://keycloak.gada.io
      - GENNY_API_URL=http://qwanda-service:8080
      - GENNY_CLIENT_ID=backend
      - GENNY_KAFKA_URL=kafka:9092
      - GENNY_REALM=internmatch
      - PROJECT_REALM=internmatch
    networks:
      - mainproxy
#    ports:
#      - 8988:8080
  #  command: java  -jar /deployments/service.jar
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 10s
      retries: 30

  fyodor:
    image: gennyproject/fyodor:latest
    depends_on:
      qwanda-service:
        condition: service_healthy
      kafka:
        condition: service_healthy
    container_name:  fyodor 
    volumes:
      - ./realm:/opt/realm:delegated
    # env_file:
    #   - ${ENV_FILE}
    environment:
      - GENNY_KAFKA_URL=kafka:9092
      - GENNY_REALM=internmatch
      - GENNY_CLIENT_ID=${GENNY_CLIENT_ID}
      - GENNY_CLIENT_SECRET=${GENNY_CLIENT_SECRET}
      - GENNY_SERVICE_USERNAME=${GENNY_SERVICE_USERNAME}
      - GENNY_SERVICE_PASSWORD=${GENNY_SERVICE_PASSWORD}
      - GENNY_KEYCLOAK_URL=https://keycloak.gada.io
      - GENNY_API_URL=http://qwanda-service:8080
      - GENNY_MYSQL_FULL_URL=alyson.genny.life:3310/gennydb?zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
      - GENNY_CACHE_HOST=http://localhost
      - GENNY_CACHE_PORT=8090
    ports:
      - "4242:8080"
    links:
      - mysql:mysql
    networks:
      - mainproxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/version"]
      interval: 10s
      timeout: 10s
      retries: 30

  mysqld-exporter:
    #image: quay.io/prometheus/mysqld-exporter
    image: prom/mysqld-exporter:latest
    command:
     - '--collect.info_schema.tablestats'
    container_name: mysqld-exporter
    environment:
      # add the mysql database here
      - DATA_SOURCE_NAME=exporter:exporter@(mysql:3306)/
    ports:
      - 9104:9104
    networks:
      - mainproxy
    depends_on:
      mysql:
        condition: service_healthy

  data-index:
    container_name: data-index
    image: quay.io/kiegroup/kogito-data-index-infinispan:latest
    ports:
      - "8180:8080"
    depends_on:
      kafka:
        condition: service_started
      infinispan:
        condition: service_healthy
    volumes:
      - ./persistence/:/home/kogito/data/protobufs/
    environment:
      QUARKUS_INFINISPAN_CLIENT_SERVER_LIST: infinispan:11222
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "false"
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KOGITO_DATA_INDEX_PROPS: -Dkogito.protobuf.folder=/home/kogito/data/protobufs/

  jobs-service:
    container_name: jobs-service
    network_mode: "host"
    image: quay.io/kiegroup/kogito-jobs-service-infinispan:latest
    depends_on:
      kafka:
        condition: service_started
      infinispan:
        condition: service_healthy
      data-index:
        condition: service_started
    environment:
      QUARKUS_INFINISPAN_CLIENT_USE_AUTH: "false"
      ENABLE_EVENTS: "true"
      KOGITO_JOBS_PROPS: -Dquarkus-profile=events-support -D%events-support.quarkus.http.port=8580 -D%events-support.kafka.bootstrap.servers=kafka:9092
                         -D%events-support.mp.messaging.outgoing.kogito-job-service-job-status-events.bootstrap.servers=kafka:9092
                         -Dkogito.service.url=http://alyson.genny.life:8580

  management-console:
   container_name: management-console
   image: quay.io/kiegroup/kogito-management-console:latest
   ports:
     - 7280:8080
   depends_on:
     data-index:
       condition: service_started
     jobs-service:
       condition: service_started
   volumes:
     - ./svg/:/home/kogito/data/svg/
   environment:
      KOGITO_DATAINDEX_HTTP_URL: http://alyson.genny.life:8180/graphql
      KOGITO_MANAGEMENT_CONSOLE_PROPS: -Dkogito.consoles.keycloak.config.url=https://keycloak.gada.io/auth -Dkogito.consoles.keycloak.config.health-check-url=https://keycloak.gada.io/auth/realms/internmatch/.well-known/openid-configuration -Dkogito.svg.folder.path=/home/kogito/data/svg

  task-console:
    container_name: task-console
    image: quay.io/kiegroup/kogito-task-console:latest
    ports:
      - 7380:8080
    depends_on:
      data-index:
        condition: service_started
    environment:
      KOGITO_DATAINDEX_HTTP_URL: http://alyson.genny.life:8180/graphql
      KOGITO_TASK_CONSOLE_PROPS: -Dkogito.consoles.keycloak.config.url=http://alyson.genny.life:8480/auth -Dkogito.consoles.keycloak.config.health-check-url=https://keycloak.gada.io/auth/realms/internmatch/.well-known/openid-configuration


volumes:
  abn_tmp:
  mysql_data:
  minio_conf:
  minio_data:
  maildata:
    driver: local
  mailstate:
    driver: local
networks:
  mainproxy:
    name: mp
    driver: bridge


